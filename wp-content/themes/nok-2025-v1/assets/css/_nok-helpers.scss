@use "sass:math";
@use "sass:map";
@use "nok-variables";
@use "tools/nok-mixins";
@use "tools/nok-api";
@use "components/nok-images";

.#{nok-variables.$prefix}-heading-font {
  @include nok-mixins.nok-heading-font;
}

.#{nok-variables.$prefix}-small-text-font,
.#{nok-variables.$prefix}-text-font {
  @include nok-mixins.nok-text-font;
}

.#{nok-variables.$prefix}-stretched-link {
  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    content: "";
  }

  @at-root *:has(&) {
    position: relative;
  }
}


.fw-bold {
  font-weight: 600;
  > b, strong {
    font-weight: 600;
  }
}

.fw-500 {
  font-weight: 500;
}

.fw-normal,
.fw-400 {
  font-weight: 400;
}

.fw-300 {
  font-weight: 300;
}

.w-100 {
  width: 100%;
}

.#{nok-variables.$prefix}-bg-blur {
  backdrop-filter: blur(5px);

  &--large {
    backdrop-filter: blur(10px);
  }
}

.nok-subtle-shadow {
  @include nok-mixins.nok-subtle-shadow;
}

/* Stacking */

.#{nok-variables.$prefix}-sticky {
  position: sticky;
  top: 0;
  z-index: nok-variables.$z-stack-top;

  &--fixed {
    position: fixed;
  }
}

@for $i from 1 through 9 {
  .#{nok-variables.$prefix}-z-#{$i} {
    --z-base: #{$i};
    z-index: var(--z-base, $i);
  }
}

.#{nok-variables.$prefix}-z-top {
  --z-base: #{nok-variables.$z-stack-top};
  z-index: nok-variables.$z-stack-top;
}

/* Aligners */

.valign-center {
  display: flex;
  align-items: center;
}
.halign-center {
  display: flex;
  justify-content: center;
}

.align-center {
  align-self: center;
}

.text-center {
  text-align: center;
}
.text-start,
.text-left {
  text-align: left;
}
.text-end,
.text-right {
  text-align: right;
}

/*
.nok-align-self-stretch {
  align-self: stretch;
  grid-column: 1 / -1;
}*/

.nok-align-self-end {
  align-self: end;
}

/* Rounded borders */

.#{nok-variables.$prefix}-rounded-border {
  @include nok-mixins.nok-border-radius;

  $border-sizes: 'default', 'large', 'x-large', 'xx-large';
  $border-positions: 'top', 'right', 'left', 'bottom';

  @each $size in $border-sizes {
    @if $size == 'default' {
      @each $pos in $border-positions {
        &-#{$pos} {
          @include nok-mixins.nok-border-radius('default', $pos);
        }
      }
    } @else {
      &-#{$size} {
        @include nok-mixins.nok-border-radius($size);

        @each $pos in $border-positions {
          &-#{$pos} {
            @include nok-mixins.nok-border-radius($size, $pos);
          }
        }
      }
    }
  }
}


/* animations */
@media (prefers-reduced-motion: no-preference) {
  @keyframes slide--in {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0%);
      opacity: 1;
    }
  }

  @keyframes slide--out {
    from {
      transform: translateX(0%);
      opacity: 1;
    }
    to {
      transform: translateX(100%);
      opacity: 1;
    }
  }

  @keyframes slide--down {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes fade--in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fade--up {
    from {
      opacity: 0;
      transform: translateY(10vh);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide--up {
    from {
      transform: translateY(5%);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes fade--out {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes pop--in {
    from {
      opacity: 0;
      transform: scale3d(0, 0, 0);
    }
    to {
      opacity: 1;
      transform: scale3d(1, 1, 1);
    }
  }
}

/* accessibility */

.#{nok-variables.$prefix}-accessibility-helper {
  display: none;
  visibility: hidden;
  inset: 0;
  position: fixed;
  z-index: nok-variables.$z-stack-top + 1;
  pointer-events: none;
}

@media (prefers-contrast: less) {
  body > .#{nok-variables.$prefix}-accessibility-helper {
    display: block;
    visibility: visible;
    backdrop-filter: brightness(0.9) contrast(0.9);
  }
}

@media (prefers-contrast: more) {
  body > .#{nok-variables.$prefix}-accessibility-helper {
    display: block;
    visibility: visible;
    backdrop-filter: brightness(1.1) contrast(1.1);
  }
}


//@for $i from 1 through 7 {
//  .#{nok-variables.$prefix}-fs-#{$i} {
//    font-size: var(--nok-font-size-#{(8- $i)});
//  }
//}

.#{nok-variables.$prefix}-fs-buttons {
  font-size: var(--nok-font-size-buttons);
}

/* Alpha classes */
$alphas: (
        "alpha-1": 1,
        "bg-alpha-1": 1,
);
@for $i from 0 through 10 {
  $value: ($i / 10);
  .#{nok-variables.$prefix}-alpha-#{$i} {
    --text-alpha-value: #{$value};
  }
  .#{nok-variables.$prefix}-bg-alpha-#{$i} {
    --bg-alpha-value: #{$value};
  }
  @media (prefers-color-scheme: dark) {
    .#{nok-variables.$prefix}-dark-alpha-#{$i} {
      --text-alpha-value: #{$value};
    }
    .#{nok-variables.$prefix}-dark-bg-alpha-#{$i} {
      --bg-alpha-value: #{$value};
    }
  }
}


/* margin*/
//@for $i from 1 through 5 {
//  .#{nok-variables.$prefix}-mr-#{$i} {
//    margin-right: #{($i * nok-variables.$padding-base)};
//  }
//  .#{nok-variables.$prefix}-mb-#{$i} {
//    margin-bottom: #{($i * nok-variables.$padding-base)};
//  }
//  .#{nok-variables.$prefix}-ml-#{$i} {
//    margin-left: #{($i * nok-variables.$padding-base)};
//  }
//}

$utilities: (
        "gap": (
                css-var: true,
                css-variable-name: gap,
                no-prefix: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-gap,
                values:nok-variables.$padding-base-values
        ),
        "grid-gap": (
                css-var: true,
                css-variable-name: grid-gap,
                no-prefix: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-grid-gap,
                values:nok-variables.$padding-base-values
        ),
        "column-gap": (
                css-var: true,
                css-variable-name: column-gap,
                no-prefix: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-column-gap,
                values:nok-variables.$padding-base-values
        ),
        "padding": (
                property: padding,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-p,
                values:nok-variables.$padding-base-values
        ),
        "padding-top": (
                property: padding-top,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pt,
                values:nok-variables.$padding-base-values
        ),
        "padding-right": (
                property: padding-right,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pr,
                values:nok-variables.$padding-base-values
        ),
        "padding-bottom": (
                property: padding-bottom,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pb,
                values:nok-variables.$padding-base-values
        ),
        "padding-left": (
                property: padding-left,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pl,
                values:nok-variables.$padding-base-values
        ),
        "padding-x": (
                property: padding-right padding-left,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-px,
                values:nok-variables.$padding-base-values
        ),
        "padding-y": (
                property: padding-top padding-bottom,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-py,
                values:nok-variables.$padding-base-values
        ),
        "margin": (
                property: margin,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-m,
                values:nok-variables.$padding-base-values
        ),
        "margin-top": (
                property: margin-top,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-mt,
                values:nok-variables.$padding-base-values
        ),
        "margin-end": (
                property: margin-right,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-me,
                values:nok-variables.$padding-base-values
        ),
        "margin-bottom": (
                property: margin-bottom,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-mb,
                values:nok-variables.$padding-base-values
        ),
        "margin-start": (
                property: margin-left,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-ms,
                values:nok-variables.$padding-base-values
        ),
        "margin-x": (
                property: margin-right margin-left,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-mx,
                values:nok-variables.$padding-base-values
        ),
        "margin-y": (
                property: margin-top margin-bottom,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-my,
                values:nok-variables.$padding-base-values
        ),
        "border-bottom": (
                responsive: false,
                responsive-up-to: true,
                property: border-bottom,
                class: #{nok-variables.$prefix}-border-bottom,
                values: (
                        1: 1px solid oklch(from var(--text-base) l c h / 0.25)
                )
        ),
        "border-radius": (
                property: border-radius,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-border-radius,
                values: 0
        ),
        "aspect": (
                property: aspect-ratio,
                responsive: false,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-aspect,
                values:nok-variables.$aspect-ratios
        ),
        "invisible": (
                property: display,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-invisible,
                no-suffix: true,
                values: none,
        ),
        "order": (
                responsive: true,
                property: order,
                class: #{nok-variables.$prefix}-order,
                values: (
                        first: -1,
                        0: 0,
                        1: 1,
                        2: 2,
                        3: 3,
                        4: 4,
                        last: 5,
                ),
        ),
        "columns": (
                css-var: true,
                css-variable-name: grid-columns,
                no-prefix: true,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-columns,
                values: 0 1 2 3 4 5 6 7 8 9 10 11 12
        ),
        "align-self": (
                responsive: false,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-align-self,
                values: (
                        stretch: (align-self: stretch, grid-column: "1 / -1")
                )
        ),
        "align-items": (
                responsive: false,
                responsive-up-to: true,
                property: align-items,
                class: #{nok-variables.$prefix}-align-items,
                values: (
                        center: center,
                        stretch: stretch,
                        start: flex-start,
                        end: flex-end,
                )
        ),
        "align-content": (
                responsive: false,
                responsive-up-to: true,
                property: align-content,
                class: #{nok-variables.$prefix}-align-content,
                values: (
                        center: center,
                        stretch: stretch,
                        start: flex-start,
                        end: flex-end,
                )
        ),
        "justify-self": (
                responsive: false,
                responsive-up-to: true,
                property: justify-self,
                class: #{nok-variables.$prefix}-justify-self,
                values: (
                        center: center,
                        stretch: stretch,
                        start: flex-start,
                        end: flex-end,
                )
        ),
        "justify-items": (
                responsive: false,
                responsive-up-to: true,
                property: justify-items,
                class: #{nok-variables.$prefix}-justify-items,
                values: (
                        center: center,
                        stretch: stretch,
                        start: flex-start,
                        end: flex-end,
                )
        ),
        "text-wrap": (
                responsive: false,
                responsive-up-to: false,
                property: text-wrap-style,
                class: #{nok-variables.$prefix}-text-wrap,
                values: (
                      pretty,
                      balance
                )
        ),
        "column-start": (
                responsive: false,
                responsive-up-to: true,
                property: grid-column-start,
                class: #{nok-variables.$prefix}-column-start,
                values: (
                        start: 1,
                        2: 2,
                        3: 3,
                        4: 4,
                        end: -1,
                )
        ),
        'offset': (
                css-var: true,
                css-variable-name: offset,
                no-prefix: true,
                responsive: true,
                responsive-up-to: false,
                class: #{nok-variables.$prefix}-column-offset,
                values: (
                        2,
                        1,
                        0,
                        -1,
                        -2,
                )
        ),
        'span-all-columns': (
                responsive: false,
                responsive-up-to: true,
                no-suffix: true,
                property: grid-column,
                class: #{nok-variables.$prefix}-span-all-columns,
                values: (
                      "1 / -1"
                )
        ),
  //conceptual
        "column-last-x": (
                responsive: true,
                responsive-up-to: false,
                property: grid-column,
                class: #{nok-variables.$prefix}-column-last,
                values: (
                        6: "span 6 / -1",
                        5: "span 5 / -1",
                        4: "span 4 / -1",
                        3: "span 3 / -1",
                        2: "span 2 / -1",
                        1: "span 1 / -1",
                )
        ),
        "column-first-x": (
                responsive: true,
                responsive-up-to: false,
                property: grid-column,
                class: #{nok-variables.$prefix}-column-first,
                values: (
                        6: "1 / 7",
                        5: "1 / 6",
                        4: "1 / 5",
                        3: "1 / 4",
                        2: "1 / 3",
                        1: "1 / 2",
                )
        ),
        "font-size": (
                property: font-size,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-fs,
                values: nok-variables.$font-sizes
        ),
        "height": (
                property: height,
                no-prefix: true,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-h,
                values: (
                        100: 100%
                )
        ),
        "pull-up": (
            css-var: true,
            css-variable-name: pull-amount,
            no-prefix: true,
            responsive: true,
            responsive-up-to: false,
            class: #{nok-variables.$prefix}-pull-up,
            values: 1 2 3 4
        ),
);

%pull-up {
  margin-top: calc((-1 * var(--pull-amount, 0)) * var(--nok-spacing-section-ends, 0));
}

[class*="#{nok-variables.$prefix}-pull-up"] {
  @extend %pull-up;
}

//construct helpers
@include nok-api.generate-helpers($utilities);

.#{nok-variables.$prefix}-scrollable {
  $scrollbar_thickness: 10px;

  &__horizontal { //might be confusing, but a flex-direction: row layout uses gaps that are similar to grid's COLUMN gaps
    --flex-gap: var(--column-gap, var(--grid-gap, var(--#{nok-variables.$prefix}-global-grid-gap)));
    --flex-direction: row;
    --overflow: auto hidden;
    @include nok-mixins.nok-scrollbar-thin($scrollbar_thickness, false);
  }
  &__vertical {
    --flex-gap: var(--row-gap, var(--grid-gap, var(--#{nok-variables.$prefix}-global-grid-gap)));
    --flex-direction: column;
    --overflow: hidden auto;
    @include nok-mixins.nok-scrollbar-thin($scrollbar_thickness, true);
  }
  &__horizontal,&__vertical {

    padding: var(--shadow-size, 0px) var(--shadow-size, 0px) calc(var(--shadow-size, 0px) + $scrollbar_thickness * 2);
    margin: calc(-1 * var(--shadow-size, 0px));

    &.nok-subtle-shadow-compensation {
      --shadow-size: 5px;
    }

    /* Enable draggable cursor for non-touch devices */
    @media (pointer: fine) {
      & {
        cursor: grab;
      }
      &:active, &.being-scrolled {
        cursor: grabbing;
        user-select: none;
      }
    }

    &.columns-to-slides {
      --slides-in-view: var(--grid-columns);
    }

    scroll-behavior: smooth;

    display: flex;
    @include nok-mixins.nok-flex-gap(0rem);

    flex-direction: var(--flex-direction, row);
    overflow: var(--overflow, hidden auto);
    flex-wrap: nowrap;

    &[data-scroll-snapping="true"] {
      scroll-snap-type: both mandatory;
      scroll-snap-stop: normal;
      scroll-snap-align: center;
    }

    > * {
      flex: 0 0 calc(
        (100% - (var(--flex-gap, 0rem) * (var(--slides-in-view, 1) - 1))) / var(--slides-in-view, 1)
      );
      //scroll-snap-align: start;
    }

    nok-square-block {
      .nok-square-block {
        &__icon,
        &__heading,
        &__text,
        &__link::after {
          pointer-events: none;
        }
      }
    }

  }
}
//
// Visually hidden
//

.visually-hidden,
.visually-hidden-focusable:not(:focus):not(:focus-within) {
  @include nok-mixins.visually-hidden();
}

.hide-when-empty {
    &:empty {
        display: none !important;
    }
}

/* Animate on scroll */

.nok-aos {
  opacity: 0;
  @include nok-mixins.no-transitions {
    @at-root body.domready & {
      opacity: 1;
    }
  }
  @include nok-mixins.transition-properties {
    opacity: 0;
    position: relative;
    &[data-visible="true"] {
      animation: fade--up (nok-variables.$animation-duration * 3) ease-out forwards;
      nok-square-block,
      nok-accordion {
        transform: translateY(5%);
        animation: slide--up (nok-variables.$animation-duration * 5.5) ease-out forwards;
      }
    }
  }
}