/**
    * Mixin to apply styles when the DOM is fully loaded.
    * By hnldesign - 2025
    *
    * This mixin targets elements when the `body` element has the `domready` class,
    * indicating that the DOM is fully loaded and parsed.
    *
    * Usage:
    * @include domready {
    *   // Your styles here
    * }
 */
/*!
 * Baseline Grid CSS v2.0.0 - 26-8-2025
 * Mixin to apply a baseline grid to an element and its children
 * Copyright (c) 2022-2025 hnldesign. All rights reserved.
 * See https://hnldesign.hashnode.dev/setting-a-flexible-baseline-grid-in-css
 *
 * You can set --fs-threshold-ratio (per element) to determine the point at which the baseline doubles (or triples etc) in size.
 * The default is at 0.8, which means that if the font-size is over 80% of the line-height, the baseline will double.
 * Valid values are between 0 and 1 (will be clamped).
 */
/**
 * hyperlink
 */
.nok-hyperlink:not(.nok-button) {
  color: var(--text-color, var(--text-color----bg-color--contrast, inherit));
  --underline-color: var(--text-color, var(--text-color--contrast, inherit));
  --underline-color--active: var(--text-color--contrast, inherit);
  --active-color: #000;
  --hover-transition-time: 0.1s;
  --hover-color: var(--text-color--hover, var(--bg-color--contrast, inherit));
  --underline-height: 0.2ex;
  --padding: 0.35ex;
  --gradient: linear-gradient(
                  transparent 0%,
                  transparent calc(50% - var(--underline-height)),
                  var(--underline-color) calc(50% - var(--underline-height)),
                  var(--underline-color) 150%
  );
  -webkit-tap-highlight-color: transparent;
  text-decoration: none;
  text-decoration-line: none;
  position: relative;
  padding: var(--padding) 0;
  bottom: calc(-0.25 * (var(--padding)));
  background-image: var(--gradient);
  background-size: 100% 200%;
  background-repeat: no-repeat;
  background-position: 0 0;
}
@media (prefers-reduced-motion: no-preference) {
  body.__enable-transitions .nok-hyperlink:not(.nok-button), body.no-js .nok-hyperlink:not(.nok-button) {
    transition: background-position var(--hover-transition-time) ease-out, color var(--hover-transition-time) ease-out;
  }
}
.nok-hyperlink:not(.nok-button):hover {
  --underline-color: var(--hover-color);
  color: var(--hover-color);
  background-position: 0 calc(-1 * var(--underline-height));
  text-decoration-line: none;
}
.nok-hyperlink:not(.nok-button):active, .nok-hyperlink:not(.nok-button):hover:focus:not(:focus-visible) {
  padding: var(--padding);
  margin: auto calc(-1 * var(--padding));
  color: var(--underline-color--active);
  background-position: 0 100%;
}
.nok-hyperlink:not(.nok-button):focus-visible {
  overflow: hidden;
  border-radius: var(--nok-default-border-radius, 0.4rem);
  box-shadow: 0 0 0px 4px var(--nok-yellow);
  outline: 2px solid #FFF;
}
@media (prefers-reduced-motion: no-preference) {
  body.__enable-transitions .nok-hyperlink:not(.nok-button):focus-visible, body.no-js .nok-hyperlink:not(.nok-button):focus-visible {
    transition: box-shadow 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  }
}
.nok-hyperlink:not(.nok-button) svg, .nok-hyperlink:not(.nok-button) img {
  display: inline;
}
p .nok-hyperlink:not(.nok-button) {
  color: var(--nok25-lightblue, inherit);
  --underline-color: var(--nok25-lightblue, inherit);
  --underline-color--active: var(--nok25-lightblue--contrast, inherit);
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vay1saW5rcy5zY3NzIiwibm9rLWxpbmtzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTs7Ozs7Ozs7Ozs7RUNHRTtBQUNGOzs7Ozs7Ozs7RUFTRTtBQUNGOztFQUVFO0FBQ0Y7RUFDRSwwRUFBMEU7RUFDMUUsMEVBQTBFO0VBQzFFLCtEQUErRDtFQUMvRCxvQkFBb0I7RUFDcEIsNkJBQTZCO0VBQzdCLDJFQUEyRTtFQUMzRSx5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCOzs7OztHQUtDO0VBQ0Qsd0NBQXdDO0VBQ3hDLHFCQUFxQjtFQUNyQiwwQkFBMEI7RUFDMUIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixzQ0FBc0M7RUFDdEMsaUNBQWlDO0VBQ2pDLDBCQUEwQjtFQUMxQiw0QkFBNEI7RUFDNUIsd0JBQXdCO0FBQzFCO0FBQ0E7RUFDRTtJQUNFLGtIQUFrSDtFQUNwSDtBQUNGO0FBQ0E7RUFDRSxxQ0FBcUM7RUFDckMseUJBQXlCO0VBQ3pCLHlEQUF5RDtFQUN6RCwwQkFBMEI7QUFDNUI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixzQ0FBc0M7RUFDdEMscUNBQXFDO0VBQ3JDLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHVEQUF1RDtFQUN2RCx5Q0FBeUM7RUFDekMsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRTtJQUNFLHlEQUF5RDtFQUMzRDtBQUNGO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxzQ0FBc0M7RUFDdEMsa0RBQWtEO0VBQ2xELG9FQUFvRTtBQUN0RSIsImZpbGUiOiJub2stbGlua3MuY3NzIiwic291cmNlc0NvbnRlbnQiOltudWxsLCIvKipcbiAgICAqIE1peGluIHRvIGFwcGx5IHN0eWxlcyB3aGVuIHRoZSBET00gaXMgZnVsbHkgbG9hZGVkLlxuICAgICogQnkgaG5sZGVzaWduIC0gMjAyNVxuICAgICpcbiAgICAqIFRoaXMgbWl4aW4gdGFyZ2V0cyBlbGVtZW50cyB3aGVuIHRoZSBgYm9keWAgZWxlbWVudCBoYXMgdGhlIGBkb21yZWFkeWAgY2xhc3MsXG4gICAgKiBpbmRpY2F0aW5nIHRoYXQgdGhlIERPTSBpcyBmdWxseSBsb2FkZWQgYW5kIHBhcnNlZC5cbiAgICAqXG4gICAgKiBVc2FnZTpcbiAgICAqIEBpbmNsdWRlIGRvbXJlYWR5IHtcbiAgICAqICAgLy8gWW91ciBzdHlsZXMgaGVyZVxuICAgICogfVxuICovXG4vKiFcbiAqIEJhc2VsaW5lIEdyaWQgQ1NTIHYyLjAuMCAtIDI2LTgtMjAyNVxuICogTWl4aW4gdG8gYXBwbHkgYSBiYXNlbGluZSBncmlkIHRvIGFuIGVsZW1lbnQgYW5kIGl0cyBjaGlsZHJlblxuICogQ29weXJpZ2h0IChjKSAyMDIyLTIwMjUgaG5sZGVzaWduLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogU2VlIGh0dHBzOi8vaG5sZGVzaWduLmhhc2hub2RlLmRldi9zZXR0aW5nLWEtZmxleGlibGUtYmFzZWxpbmUtZ3JpZC1pbi1jc3NcbiAqXG4gKiBZb3UgY2FuIHNldCAtLWZzLXRocmVzaG9sZC1yYXRpbyAocGVyIGVsZW1lbnQpIHRvIGRldGVybWluZSB0aGUgcG9pbnQgYXQgd2hpY2ggdGhlIGJhc2VsaW5lIGRvdWJsZXMgKG9yIHRyaXBsZXMgZXRjKSBpbiBzaXplLlxuICogVGhlIGRlZmF1bHQgaXMgYXQgMC44LCB3aGljaCBtZWFucyB0aGF0IGlmIHRoZSBmb250LXNpemUgaXMgb3ZlciA4MCUgb2YgdGhlIGxpbmUtaGVpZ2h0LCB0aGUgYmFzZWxpbmUgd2lsbCBkb3VibGUuXG4gKiBWYWxpZCB2YWx1ZXMgYXJlIGJldHdlZW4gMCBhbmQgMSAod2lsbCBiZSBjbGFtcGVkKS5cbiAqL1xuLyoqXG4gKiBoeXBlcmxpbmtcbiAqL1xuLm5vay1oeXBlcmxpbms6bm90KC5ub2stYnV0dG9uKSB7XG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLCB2YXIoLS10ZXh0LWNvbG9yLS0tLWJnLWNvbG9yLS1jb250cmFzdCwgaW5oZXJpdCkpO1xuICAtLXVuZGVybGluZS1jb2xvcjogdmFyKC0tdGV4dC1jb2xvciwgdmFyKC0tdGV4dC1jb2xvci0tY29udHJhc3QsIGluaGVyaXQpKTtcbiAgLS11bmRlcmxpbmUtY29sb3ItLWFjdGl2ZTogdmFyKC0tdGV4dC1jb2xvci0tY29udHJhc3QsIGluaGVyaXQpO1xuICAtLWFjdGl2ZS1jb2xvcjogIzAwMDtcbiAgLS1ob3Zlci10cmFuc2l0aW9uLXRpbWU6IDAuMXM7XG4gIC0taG92ZXItY29sb3I6IHZhcigtLXRleHQtY29sb3ItLWhvdmVyLCB2YXIoLS1iZy1jb2xvci0tY29udHJhc3QsIGluaGVyaXQpKTtcbiAgLS11bmRlcmxpbmUtaGVpZ2h0OiAwLjJleDtcbiAgLS1wYWRkaW5nOiAwLjM1ZXg7XG4gIC0tZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgICAgICAgICAgIHRyYW5zcGFyZW50IDAlLFxuICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgY2FsYyg1MCUgLSB2YXIoLS11bmRlcmxpbmUtaGVpZ2h0KSksXG4gICAgICAgICAgICAgICAgICB2YXIoLS11bmRlcmxpbmUtY29sb3IpIGNhbGMoNTAlIC0gdmFyKC0tdW5kZXJsaW5lLWhlaWdodCkpLFxuICAgICAgICAgICAgICAgICAgdmFyKC0tdW5kZXJsaW5lLWNvbG9yKSAxNTAlXG4gICk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZykgMDtcbiAgYm90dG9tOiBjYWxjKC0wLjI1ICogKHZhcigtLXBhZGRpbmcpKSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHZhcigtLWdyYWRpZW50KTtcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDIwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbn1cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogbm8tcHJlZmVyZW5jZSkge1xuICBib2R5Ll9fZW5hYmxlLXRyYW5zaXRpb25zIC5ub2staHlwZXJsaW5rOm5vdCgubm9rLWJ1dHRvbiksIGJvZHkubm8tanMgLm5vay1oeXBlcmxpbms6bm90KC5ub2stYnV0dG9uKSB7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiB2YXIoLS1ob3Zlci10cmFuc2l0aW9uLXRpbWUpIGVhc2Utb3V0LCBjb2xvciB2YXIoLS1ob3Zlci10cmFuc2l0aW9uLXRpbWUpIGVhc2Utb3V0O1xuICB9XG59XG4ubm9rLWh5cGVybGluazpub3QoLm5vay1idXR0b24pOmhvdmVyIHtcbiAgLS11bmRlcmxpbmUtY29sb3I6IHZhcigtLWhvdmVyLWNvbG9yKTtcbiAgY29sb3I6IHZhcigtLWhvdmVyLWNvbG9yKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCBjYWxjKC0xICogdmFyKC0tdW5kZXJsaW5lLWhlaWdodCkpO1xuICB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTtcbn1cbi5ub2staHlwZXJsaW5rOm5vdCgubm9rLWJ1dHRvbik6YWN0aXZlLCAubm9rLWh5cGVybGluazpub3QoLm5vay1idXR0b24pOmhvdmVyOmZvY3VzOm5vdCg6Zm9jdXMtdmlzaWJsZSkge1xuICBwYWRkaW5nOiB2YXIoLS1wYWRkaW5nKTtcbiAgbWFyZ2luOiBhdXRvIGNhbGMoLTEgKiB2YXIoLS1wYWRkaW5nKSk7XG4gIGNvbG9yOiB2YXIoLS11bmRlcmxpbmUtY29sb3ItLWFjdGl2ZSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbn1cbi5ub2staHlwZXJsaW5rOm5vdCgubm9rLWJ1dHRvbik6Zm9jdXMtdmlzaWJsZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLW5vay1kZWZhdWx0LWJvcmRlci1yYWRpdXMsIDAuNHJlbSk7XG4gIGJveC1zaGFkb3c6IDAgMCAwcHggNHB4IHZhcigtLW5vay15ZWxsb3cpO1xuICBvdXRsaW5lOiAycHggc29saWQgI0ZGRjtcbn1cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogbm8tcHJlZmVyZW5jZSkge1xuICBib2R5Ll9fZW5hYmxlLXRyYW5zaXRpb25zIC5ub2staHlwZXJsaW5rOm5vdCgubm9rLWJ1dHRvbik6Zm9jdXMtdmlzaWJsZSwgYm9keS5uby1qcyAubm9rLWh5cGVybGluazpub3QoLm5vay1idXR0b24pOmZvY3VzLXZpc2libGUge1xuICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC42cyBjdWJpYy1iZXppZXIoMC4xNiwgMSwgMC4zLCAxKTtcbiAgfVxufVxuLm5vay1oeXBlcmxpbms6bm90KC5ub2stYnV0dG9uKSBzdmcsIC5ub2staHlwZXJsaW5rOm5vdCgubm9rLWJ1dHRvbikgaW1nIHtcbiAgZGlzcGxheTogaW5saW5lO1xufVxucCAubm9rLWh5cGVybGluazpub3QoLm5vay1idXR0b24pIHtcbiAgY29sb3I6IHZhcigtLW5vazI1LWxpZ2h0Ymx1ZSwgaW5oZXJpdCk7XG4gIC0tdW5kZXJsaW5lLWNvbG9yOiB2YXIoLS1ub2syNS1saWdodGJsdWUsIGluaGVyaXQpO1xuICAtLXVuZGVybGluZS1jb2xvci0tYWN0aXZlOiB2YXIoLS1ub2syNS1saWdodGJsdWUtLWNvbnRyYXN0LCBpbmhlcml0KTtcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9bm9rLWxpbmtzLmNzcy5tYXAgKi9cbiJdfQ== */