/**
    * Mixin to apply styles when the DOM is fully loaded.
    * By hnldesign - 2025
    *
    * This mixin targets elements when the `body` element has the `domready` class,
    * indicating that the DOM is fully loaded and parsed.
    *
    * Usage:
    * @include domready {
    *   // Your styles here
    * }
 */
/*!
 * Baseline Grid CSS v2.0.0 - 26-8-2025
 * Mixin to apply a baseline grid to an element and its children
 * Copyright (c) 2022-2025 hnldesign. All rights reserved.
 * See https://hnldesign.hashnode.dev/setting-a-flexible-baseline-grid-in-css
 *
 * You can set --fs-threshold-ratio (per element) to determine the point at which the baseline doubles (or triples etc) in size.
 * The default is at 0.8, which means that if the font-size is over 80% of the line-height, the baseline will double.
 * Valid values are between 0 and 1 (will be clamped).
 */
/**
 * hero unit
 */
.nok-hero {
  --grid-gap: var(--nok-padding-base, var(--nok-global-grid-gap, 1.5rem));
  position: relative;
  overflow: hidden;
  border-radius: 0 0 calc(var(--nok-default-border-radius--large, 1rem) * 2.5) calc(var(--nok-default-border-radius--large, 1rem) * 2.5);
  padding-right: 0;
  padding-left: 0;
  overflow: hidden;
  display: grid;
  grid-template-columns: 3fr 4fr;
}
@media (max-width: 1399.98px) {
  .nok-hero {
    grid-template-columns: 4fr 1fr 3fr;
  }
}
.nok-hero {
  grid-template-rows: 1fr auto 1fr;
}
.nok-hero article {
  grid-row: 2/3;
  grid-column: 1/2;
}
@media (max-width: 1399.98px) {
  .nok-hero article {
    grid-column: 1/3;
  }
}
.nok-hero article {
  z-index: 2;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: flex-start;
  gap: var(--grid-gap, var(--nok-global-grid-gap));
}
.nok-hero figure {
  grid-row: 1/-1;
  grid-column: 2/3;
}
@media (max-width: 1399.98px) {
  .nok-hero figure {
    grid-column: 2/4;
  }
}
@media (max-width: 991.98px) {
  .nok-hero figure {
    padding-left: var(--nok-nok-spacing-section-sides, 1.5rem);
  }
}
.nok-hero figure {
  z-index: 1;
  overflow: hidden;
  margin: 0;
  --grad-1-1: var(--nok-lightblue);
  --grad-1-2: var(--nok-green);
  --grad-1-3: var(--nok-yellow);
  --base-layer: var(--nok-body--darker);
}
@media (prefers-color-scheme: dark) {
  .nok-hero figure {
    --grad-1-3: var(--nok-lightblue);
    --grad-1-1: var(--nok-yellow);
    --base-layer: var(--nok-lightblue--darker);
  }
}
.nok-hero figure svg {
  min-height: 100%;
  min-width: 100%;
  max-width: -moz-fit-content;
  max-width: fit-content;
}
.nok-hero figure linearGradient#a {
  --bg-alpha-value: 1;
}
.nok-hero figure linearGradient#b {
  --bg-alpha-value: 0.5;
}
.nok-hero figure linearGradient#c {
  --bg-alpha-value: 0.3;
}
.nok-hero figure path#d {
  --bg-alpha-value: 0.4;
}
@media (prefers-color-scheme: dark) {
  .nok-hero figure path#d {
    --bg-alpha-value: 0.1;
  }
}
.nok-hero figure foreignObject img {
  max-width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: 40% 50%;
     object-position: 40% 50%;
}
@media (max-width: 1199.98px) {
  .nok-hero figure foreignObject img {
    -o-object-position: 60% 50%;
       object-position: 60% 50%;
  }
}
.nok-hero figure foreignObject img {
  background-color: hsla(var(--nok-green)/0.5);
}
.nok-hero article, .nok-hero figure {
  position: relative;
}
.nok-hero section {
  grid-column: 1/-1;
  grid-row: 3/4;
  z-index: 3;
  align-self: end;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-between;
  padding-top: var(--nok-padding-base, 1.5rem);
  padding-bottom: var(--nok-padding-base, 1.5rem);
}
.nok-hero section > * {
  flex-shrink: 0;
  flex-grow: 1;
  flex-basis: max-content;
}
.nok-hero section .nok-usp {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: flex-start;
  gap: calc(var(--grid-gap) / 2);
}
.nok-hero section .nok-usp > svg {
  width: calc(var(--nok25-font-size-buttons) * var(--nok25-body-line-height));
  height: calc(var(--nok25-font-size-buttons) * var(--nok25-body-line-height));
}
.nok-hero section {
  padding-right: var(--nok-nok-spacing-section-sides, 1.5rem);
  padding-left: var(--nok-nok-spacing-section-sides, 1.5rem);
}
.nok-hero article {
  padding: var(--grid-gap) 0 var(--grid-gap) var(--nok-nok-spacing-section-sides, 1.5rem);
}
.nok-hero {
  /* Mobile */
}
@media (max-width: 991.98px) {
  .nok-hero {
    grid-template-columns: 1fr;
    grid-template-rows: 60vw 10vw auto 1fr;
  }
  .nok-hero article, .nok-hero figure, .nok-hero section, .nok-hero-figure-mask {
    grid-column: 1;
  }
  .nok-hero article {
    grid-row: 2/4;
    align-self: end;
    padding-right: var(--nok-nok-spacing-section-sides, 1.5rem);
  }
  .nok-hero figure {
    grid-row: 1/3;
    -webkit-mask-image: linear-gradient(to bottom, rgb(0, 0, 0) 70%, rgba(0, 0, 0, 0.5) 80%, rgba(255, 255, 255, 0) 95%);
            mask-image: linear-gradient(to bottom, rgb(0, 0, 0) 70%, rgba(0, 0, 0, 0.5) 80%, rgba(255, 255, 255, 0) 95%);
  }
  .nok-hero section {
    --bg-alpha-value: 0;
    grid-row: 4/5;
    flex-wrap: wrap;
    justify-content: center;
    flex-direction: column;
  }
}
@media (max-width: 767.98px) {
  .nok-hero button {
    align-self: stretch;
  }
  .nok-hero article .nok-horizontal-button-group {
    grid-template-columns: 1fr;
  }
}

/* Typography */
h1.nok-hero__heading {
  font-weight: 500;
  line-height: 1.05;
}
/*# sourceMappingURL=data:application/json;base64, */