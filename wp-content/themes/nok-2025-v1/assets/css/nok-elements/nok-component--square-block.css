/*!
 * Baseline Grid CSS v2.0.0 - 26-8-2025
 * Mixin to apply a baseline grid to an element and its children
 * Copyright (c) 2022-2025 hnldesign. All rights reserved.
 * See https://hnldesign.hashnode.dev/setting-a-flexible-baseline-grid-in-css
 *
 * You can set --fs-threshold-ratio (per element) to determine the point at which the baseline doubles (or triples etc) in size.
 * The default is at 0.8, which means that if the font-size is over 80% of the line-height, the baseline will double.
 * Valid values are between 0 and 1 (will be clamped).
 */
/**
 * square block
 */
nok-square-block,
:host {
  --text-alpha-value: 0.8;
  --icon-color: var(--nok-yellow);
  --text-color: hsla(var(--nok-white-hsl) / var(--global-color-alpha, var(--text-alpha-value, 1)));
  --text-color--heading: hsla(var(--nok-white-hsl) / 1);
  --text-color--link: hsla(var(--nok-white-hsl) / 1);
  --text-color--link--hover: var(--nok-yellow);
  --text-color--link-icon: var(--nok-lightblue);
  --text-color--link-icon--hover: var(--nok-yellow);
  --background-color: var(--nok-darkblue);
  position: relative;
  display: grid;
  grid-template-rows: auto;
  container-type: inline-size;
  gap: 1.5rem;
  overflow: hidden;
  border-radius: var(--nok-default-border-radius--large, 1rem);
  padding: var(--nok-padding-section-sides, 3rem);
  border-radius: var(--nok-default-border-radius--large, 8px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  background-color: var(--background-color);
}
nok-square-block > *,
:host > * {
  margin: 0;
}

.nok-square-block__icon {
  color: var(--icon-color);
  display: flex;
}
.nok-square-block__icon svg {
  width: 3em;
  height: 3em;
  aspect-ratio: 1;
}
.nok-square-block__heading {
  color: var(--text-color--heading);
  font-weight: 500;
}
.nok-square-block__text {
  color: var(--text-color);
  font-size: 1.1rem;
}
.nok-square-block__link {
  display: grid;
  grid-template-columns: auto 1fr;
  justify-content: start;
  align-items: center;
  justify-items: start;
  cursor: pointer;
  gap: calc(var(--nok-padding-base, 1.5rem) / 2);
  height: 2rem;
  --text-alpha-value: 0.8;
  color: var(--text-color--link);
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 600;
  font-size: 1rem;
}
.nok-square-block__link svg {
  color: var(--text-color--link-icon);
}
.nok-square-block__link::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  content: "";
}
.nok-square-block__link:hover {
  --text-color--link: var(--text-color--link--hover);
  --text-color--link-icon: var(--text-color--link-icon--hover);
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vay1jb21wb25lbnQtLXNxdWFyZS1ibG9jay5zY3NzIiwibm9rLWNvbXBvbmVudC0tc3F1YXJlLWJsb2NrLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXQTs7Ozs7Ozs7O0VDRkU7QUFDRjs7RUFFRTtBQUNGOztFQUVFLHVCQUF1QjtFQUN2QiwrQkFBK0I7RUFDL0IsZ0dBQWdHO0VBQ2hHLHFEQUFxRDtFQUNyRCxrREFBa0Q7RUFDbEQsNENBQTRDO0VBQzVDLDZDQUE2QztFQUM3QyxpREFBaUQ7RUFDakQsdUNBQXVDO0VBQ3ZDLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2Isd0JBQXdCO0VBQ3hCLDJCQUEyQjtFQUMzQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLDREQUE0RDtFQUM1RCwrQ0FBK0M7RUFDL0MsMkRBQTJEO0VBQzNELHdDQUF3QztFQUN4Qyx5Q0FBeUM7QUFDM0M7QUFDQTs7RUFFRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsYUFBYTtBQUNmO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsV0FBVztFQUNYLGVBQWU7QUFDakI7QUFDQTtFQUNFLGlDQUFpQztFQUNqQyxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLHdCQUF3QjtFQUN4QixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGFBQWE7RUFDYiwrQkFBK0I7RUFDL0Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsZUFBZTtFQUNmLDhDQUE4QztFQUM5QyxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLDhCQUE4QjtFQUM5QixxQkFBcUI7RUFDckIseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxtQ0FBbUM7QUFDckM7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVM7RUFDVCxPQUFPO0VBQ1AsVUFBVTtFQUNWLFdBQVc7QUFDYjtBQUNBO0VBQ0Usa0RBQWtEO0VBQ2xELDREQUE0RDtBQUM5RCIsImZpbGUiOiJub2stY29tcG9uZW50LS1zcXVhcmUtYmxvY2suY3NzIiwic291cmNlc0NvbnRlbnQiOltudWxsLCIvKiFcbiAqIEJhc2VsaW5lIEdyaWQgQ1NTIHYyLjAuMCAtIDI2LTgtMjAyNVxuICogTWl4aW4gdG8gYXBwbHkgYSBiYXNlbGluZSBncmlkIHRvIGFuIGVsZW1lbnQgYW5kIGl0cyBjaGlsZHJlblxuICogQ29weXJpZ2h0IChjKSAyMDIyLTIwMjUgaG5sZGVzaWduLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogU2VlIGh0dHBzOi8vaG5sZGVzaWduLmhhc2hub2RlLmRldi9zZXR0aW5nLWEtZmxleGlibGUtYmFzZWxpbmUtZ3JpZC1pbi1jc3NcbiAqXG4gKiBZb3UgY2FuIHNldCAtLWZzLXRocmVzaG9sZC1yYXRpbyAocGVyIGVsZW1lbnQpIHRvIGRldGVybWluZSB0aGUgcG9pbnQgYXQgd2hpY2ggdGhlIGJhc2VsaW5lIGRvdWJsZXMgKG9yIHRyaXBsZXMgZXRjKSBpbiBzaXplLlxuICogVGhlIGRlZmF1bHQgaXMgYXQgMC44LCB3aGljaCBtZWFucyB0aGF0IGlmIHRoZSBmb250LXNpemUgaXMgb3ZlciA4MCUgb2YgdGhlIGxpbmUtaGVpZ2h0LCB0aGUgYmFzZWxpbmUgd2lsbCBkb3VibGUuXG4gKiBWYWxpZCB2YWx1ZXMgYXJlIGJldHdlZW4gMCBhbmQgMSAod2lsbCBiZSBjbGFtcGVkKS5cbiAqL1xuLyoqXG4gKiBzcXVhcmUgYmxvY2tcbiAqL1xubm9rLXNxdWFyZS1ibG9jayxcbjpob3N0IHtcbiAgLS10ZXh0LWFscGhhLXZhbHVlOiAwLjg7XG4gIC0taWNvbi1jb2xvcjogdmFyKC0tbm9rLXllbGxvdyk7XG4gIC0tdGV4dC1jb2xvcjogaHNsYSh2YXIoLS1ub2std2hpdGUtaHNsKSAvIHZhcigtLWdsb2JhbC1jb2xvci1hbHBoYSwgdmFyKC0tdGV4dC1hbHBoYS12YWx1ZSwgMSkpKTtcbiAgLS10ZXh0LWNvbG9yLS1oZWFkaW5nOiBoc2xhKHZhcigtLW5vay13aGl0ZS1oc2wpIC8gMSk7XG4gIC0tdGV4dC1jb2xvci0tbGluazogaHNsYSh2YXIoLS1ub2std2hpdGUtaHNsKSAvIDEpO1xuICAtLXRleHQtY29sb3ItLWxpbmstLWhvdmVyOiB2YXIoLS1ub2steWVsbG93KTtcbiAgLS10ZXh0LWNvbG9yLS1saW5rLWljb246IHZhcigtLW5vay1saWdodGJsdWUpO1xuICAtLXRleHQtY29sb3ItLWxpbmstaWNvbi0taG92ZXI6IHZhcigtLW5vay15ZWxsb3cpO1xuICAtLWJhY2tncm91bmQtY29sb3I6IHZhcigtLW5vay1kYXJrYmx1ZSk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICBjb250YWluZXItdHlwZTogaW5saW5lLXNpemU7XG4gIGdhcDogMS41cmVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ub2stZGVmYXVsdC1ib3JkZXItcmFkaXVzLS1sYXJnZSwgMXJlbSk7XG4gIHBhZGRpbmc6IHZhcigtLW5vay1wYWRkaW5nLXNlY3Rpb24tc2lkZXMsIDNyZW0pO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ub2stZGVmYXVsdC1ib3JkZXItcmFkaXVzLS1sYXJnZSwgOHB4KTtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XG59XG5ub2stc3F1YXJlLWJsb2NrID4gKixcbjpob3N0ID4gKiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5vay1zcXVhcmUtYmxvY2tfX2ljb24ge1xuICBjb2xvcjogdmFyKC0taWNvbi1jb2xvcik7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4ubm9rLXNxdWFyZS1ibG9ja19faWNvbiBzdmcge1xuICB3aWR0aDogM2VtO1xuICBoZWlnaHQ6IDNlbTtcbiAgYXNwZWN0LXJhdGlvOiAxO1xufVxuLm5vay1zcXVhcmUtYmxvY2tfX2hlYWRpbmcge1xuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvci0taGVhZGluZyk7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4ubm9rLXNxdWFyZS1ibG9ja19fdGV4dCB7XG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcbiAgZm9udC1zaXplOiAxLjFyZW07XG59XG4ubm9rLXNxdWFyZS1ibG9ja19fbGluayB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XG4gIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IHN0YXJ0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGdhcDogY2FsYyh2YXIoLS1ub2stcGFkZGluZy1iYXNlLCAxLjVyZW0pIC8gMik7XG4gIGhlaWdodDogMnJlbTtcbiAgLS10ZXh0LWFscGhhLXZhbHVlOiAwLjg7XG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLS1saW5rKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDFyZW07XG59XG4ubm9rLXNxdWFyZS1ibG9ja19fbGluayBzdmcge1xuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvci0tbGluay1pY29uKTtcbn1cbi5ub2stc3F1YXJlLWJsb2NrX19saW5rOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxO1xuICBjb250ZW50OiBcIlwiO1xufVxuLm5vay1zcXVhcmUtYmxvY2tfX2xpbms6aG92ZXIge1xuICAtLXRleHQtY29sb3ItLWxpbms6IHZhcigtLXRleHQtY29sb3ItLWxpbmstLWhvdmVyKTtcbiAgLS10ZXh0LWNvbG9yLS1saW5rLWljb246IHZhcigtLXRleHQtY29sb3ItLWxpbmstaWNvbi0taG92ZXIpO1xufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1ub2stY29tcG9uZW50LS1zcXVhcmUtYmxvY2suY3NzLm1hcCAqL1xuIl19 */