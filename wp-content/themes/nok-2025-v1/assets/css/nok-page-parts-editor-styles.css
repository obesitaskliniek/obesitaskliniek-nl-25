/**
    * Mixin to apply styles when the DOM is fully loaded.
    * By hnldesign - 2025
    *
    * This mixin targets elements when the `body` element has the `domready` class,
    * indicating that the DOM is fully loaded and parsed.
    *
    * Usage:
    * @include domready {
    *   // Your styles here
    * }
 */
/*!
 * Baseline Grid CSS v2.0.0 - 26-8-2025
 * Mixin to apply a baseline grid to an element and its children
 * Copyright (c) 2022-2025 hnldesign. All rights reserved.
 * See https://hnldesign.hashnode.dev/setting-a-flexible-baseline-grid-in-css
 *
 * You can set --fs-threshold-ratio (per element) to determine the point at which the baseline doubles (or triples etc) in size.
 * The default is at 0.8, which means that if the font-size is over 80% of the line-height, the baseline will double.
 * Valid values are between 0 and 1 (will be clamped).
 */
body nok-screen-mask .nok-button {
  display: none;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

@media (prefers-reduced-transparency) {
  body nok-screen-mask {
    display: none;
  }
}
@media (prefers-reduced-motion: no-preference) {
  body nok-screen-mask {
    transition: background 500ms ease-in-out, backdrop-filter 500ms ease-in-out;
  }
  body nok-screen-mask .nok-button {
    animation: fade--in 250ms var(--animation-easing-out, cubic-bezier(0.85, 0, 0.15, 1));
    animation-fill-mode: forwards;
  }
}
body:hover {
  touch-action: none;
}

body:hover > nok-screen-mask {
  backdrop-filter: blur(5px);
  --bg-alpha-value: 0.5;
  pointer-events: all;
}
body:hover > nok-screen-mask .nok-button {
  pointer-events: all;
  display: block;
}

@media (prefers-reduced-transparency) {
  body:hover > nok-screen-mask {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vay1wYWdlLXBhcnRzLWVkaXRvci1zdHlsZXMuc2NzcyIsIm5vay1wYWdlLXBhcnRzLWVkaXRvci1zdHlsZXMuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFOzs7Ozs7Ozs7OztFQ1FBO0FBQ0Y7Ozs7Ozs7OztFQVNFO0FBQ0Y7RUFDRSxhQUFhO0VBQ2Isd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7QUFDRjtBQUNBO0VBQ0U7SUFDRSwyRUFBMkU7RUFDN0U7RUFDQTtJQUNFLHFGQUFxRjtJQUNyRiw2QkFBNkI7RUFDL0I7QUFDRjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLHFCQUFxQjtFQUNyQixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7QUFDRiIsImZpbGUiOiJub2stcGFnZS1wYXJ0cy1lZGl0b3Itc3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbbnVsbCwiLyoqXG4gICAgKiBNaXhpbiB0byBhcHBseSBzdHlsZXMgd2hlbiB0aGUgRE9NIGlzIGZ1bGx5IGxvYWRlZC5cbiAgICAqIEJ5IGhubGRlc2lnbiAtIDIwMjVcbiAgICAqXG4gICAgKiBUaGlzIG1peGluIHRhcmdldHMgZWxlbWVudHMgd2hlbiB0aGUgYGJvZHlgIGVsZW1lbnQgaGFzIHRoZSBgZG9tcmVhZHlgIGNsYXNzLFxuICAgICogaW5kaWNhdGluZyB0aGF0IHRoZSBET00gaXMgZnVsbHkgbG9hZGVkIGFuZCBwYXJzZWQuXG4gICAgKlxuICAgICogVXNhZ2U6XG4gICAgKiBAaW5jbHVkZSBkb21yZWFkeSB7XG4gICAgKiAgIC8vIFlvdXIgc3R5bGVzIGhlcmVcbiAgICAqIH1cbiAqL1xuLyohXG4gKiBCYXNlbGluZSBHcmlkIENTUyB2Mi4wLjAgLSAyNi04LTIwMjVcbiAqIE1peGluIHRvIGFwcGx5IGEgYmFzZWxpbmUgZ3JpZCB0byBhbiBlbGVtZW50IGFuZCBpdHMgY2hpbGRyZW5cbiAqIENvcHlyaWdodCAoYykgMjAyMi0yMDI1IGhubGRlc2lnbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFNlZSBodHRwczovL2hubGRlc2lnbi5oYXNobm9kZS5kZXYvc2V0dGluZy1hLWZsZXhpYmxlLWJhc2VsaW5lLWdyaWQtaW4tY3NzXG4gKlxuICogWW91IGNhbiBzZXQgLS1mcy10aHJlc2hvbGQtcmF0aW8gKHBlciBlbGVtZW50KSB0byBkZXRlcm1pbmUgdGhlIHBvaW50IGF0IHdoaWNoIHRoZSBiYXNlbGluZSBkb3VibGVzIChvciB0cmlwbGVzIGV0YykgaW4gc2l6ZS5cbiAqIFRoZSBkZWZhdWx0IGlzIGF0IDAuOCwgd2hpY2ggbWVhbnMgdGhhdCBpZiB0aGUgZm9udC1zaXplIGlzIG92ZXIgODAlIG9mIHRoZSBsaW5lLWhlaWdodCwgdGhlIGJhc2VsaW5lIHdpbGwgZG91YmxlLlxuICogVmFsaWQgdmFsdWVzIGFyZSBiZXR3ZWVuIDAgYW5kIDEgKHdpbGwgYmUgY2xhbXBlZCkuXG4gKi9cbmJvZHkgbm9rLXNjcmVlbi1tYXNrIC5ub2stYnV0dG9uIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtdHJhbnNwYXJlbmN5KSB7XG4gIGJvZHkgbm9rLXNjcmVlbi1tYXNrIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpIHtcbiAgYm9keSBub2stc2NyZWVuLW1hc2sge1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgNTAwbXMgZWFzZS1pbi1vdXQsIGJhY2tkcm9wLWZpbHRlciA1MDBtcyBlYXNlLWluLW91dDtcbiAgfVxuICBib2R5IG5vay1zY3JlZW4tbWFzayAubm9rLWJ1dHRvbiB7XG4gICAgYW5pbWF0aW9uOiBmYWRlLS1pbiAyNTBtcyB2YXIoLS1hbmltYXRpb24tZWFzaW5nLW91dCwgY3ViaWMtYmV6aWVyKDAuODUsIDAsIDAuMTUsIDEpKTtcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgfVxufVxuYm9keTpob3ZlciB7XG4gIHRvdWNoLWFjdGlvbjogbm9uZTtcbn1cblxuYm9keTpob3ZlciA+IG5vay1zY3JlZW4tbWFzayB7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xuICAtLWJnLWFscGhhLXZhbHVlOiAwLjU7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XG59XG5ib2R5OmhvdmVyID4gbm9rLXNjcmVlbi1tYXNrIC5ub2stYnV0dG9uIHtcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLXRyYW5zcGFyZW5jeSkge1xuICBib2R5OmhvdmVyID4gbm9rLXNjcmVlbi1tYXNrIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPW5vay1wYWdlLXBhcnRzLWVkaXRvci1zdHlsZXMuY3NzLm1hcCAqL1xuIl19 */