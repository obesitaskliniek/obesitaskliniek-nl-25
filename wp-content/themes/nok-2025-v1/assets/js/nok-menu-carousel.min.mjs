import{singleClick}from"./domule/modules/hnl.clickhandlers.mjs";import{logger}from"./domule/core.log.mjs";import{debounceThis}from"./domule/util.debounce.mjs";export const NAME="menuCarousel";const SCROLL_STOP_THRESHOLD=150;const carouselState=new WeakMap;const scrollHandlers=new WeakMap;function isAtSnapPoint(carousel){const isHorizontal=carousel.scrollWidth>carousel.clientWidth;if(isHorizontal)return carousel.scrollLeft%carousel.offsetWidth===0;return carousel.scrollTop%carousel.offsetHeight===
0}function handleScroll(e){const carousel=e.target;const state=carouselState.get(carousel);if(!state)return;const atSnap=isAtSnapPoint(carousel);const timeout=atSnap?0:SCROLL_STOP_THRESHOLD;state.busy=true;carousel.classList.add("is-scrolling");if(state.timeoutId)clearTimeout(state.timeoutId);state.timeoutId=setTimeout(()=>{state.busy=false;carousel.classList.remove("is-scrolling")},timeout)}function navigateToTarget(e,carousel,targetElement,closestSlide){e.preventDefault();const state=carouselState.get(carousel);
if(!state||state.busy){logger.info(NAME,"Navigation blocked: carousel is scrolling");return}closestSlide.scrollTo({top:targetElement.offsetTop-closestSlide.offsetTop,behavior:"instant"});requestAnimationFrame(()=>{closestSlide.scrollIntoView({behavior:"smooth"})})}function setupSlide(carousel,slide){const links=slide.querySelectorAll("a.nok-nav-menu-item");links.forEach(link=>{const href=link.getAttribute("href");if(!href||!href.startsWith("#")){logger.warn(NAME,"Invalid link href (must start with #):",
link);return}const targetElement=document.getElementById(href.slice(1));if(!targetElement){logger.warn(NAME,`Target not found: ${href}`);return}const closestSlide=targetElement.closest(".nok-nav-carousel__slide");if(!closestSlide){logger.warn(NAME,`Target ${href} not inside a slide`);return}singleClick(link,e=>{navigateToTarget(e,carousel,targetElement,closestSlide)})})}export function init(elements){elements.forEach(carousel=>{carouselState.set(carousel,{busy:false,timeoutId:null});const debouncedScroll=
debounceThis(handleScroll,{threshold:50,execStart:true,execWhile:true,execDone:true});scrollHandlers.set(carousel,debouncedScroll);carousel.addEventListener("scroll",debouncedScroll);const slides=carousel.querySelectorAll(".nok-nav-carousel__slide");slides.forEach(slide=>setupSlide(carousel,slide));logger.info(NAME,`Initialized carousel with ${slides.length} slide(s)`)});return`Initialized ${elements.length} carousel(s)`}export function destroy(){for(const [carousel,handler]of scrollHandlers.entries()){carousel.removeEventListener("scroll",
handler);const state=carouselState.get(carousel);if(state?.timeoutId)clearTimeout(state.timeoutId)}scrollHandlers.clear();logger.info(NAME,"Module destroyed")};
