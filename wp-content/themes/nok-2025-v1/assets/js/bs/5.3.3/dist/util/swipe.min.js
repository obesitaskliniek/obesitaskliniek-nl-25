/*
 Bootstrap swipe.js v5.3.3 (https://getbootstrap.com/)
 Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
*/
(function(b,c){"object"===typeof exports&&"undefined"!==typeof module?module.exports=c(require("../dom/event-handler.js"),require("./config.js"),require("./index.js")):"function"===typeof define&&define.amd?define(["../dom/event-handler","./config","./index"],c):(b="undefined"!==typeof globalThis?globalThis:b||self,b.Swipe=c(b.EventHandler,b.Config,b.Index))})(this,function(b,c,d){const f={endCallback:null,leftCallback:null,rightCallback:null},g={endCallback:"(function|null)",leftCallback:"(function|null)",
rightCallback:"(function|null)"};class e extends c{constructor(a,h){super();(this._element=a)&&e.isSupported()&&(this._config=this._getConfig(h),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return f}static get DefaultType(){return g}static get NAME(){return"swipe"}dispose(){b.off(this._element,".bs.swipe")}_start(a){this._supportPointerEvents?this._eventIsPointerPenTouch(a)&&(this._deltaX=a.clientX):this._deltaX=a.touches[0].clientX}_end(a){this._eventIsPointerPenTouch(a)&&
(this._deltaX=a.clientX-this._deltaX);this._handleSwipe();d.execute(this._config.endCallback)}_move(a){this._deltaX=a.touches&&1<a.touches.length?0:a.touches[0].clientX-this._deltaX}_handleSwipe(){var a=Math.abs(this._deltaX);40>=a||(a/=this._deltaX,this._deltaX=0,a&&d.execute(0<a?this._config.rightCallback:this._config.leftCallback))}_initEvents(){this._supportPointerEvents?(b.on(this._element,"pointerdown.bs.swipe",a=>this._start(a)),b.on(this._element,"pointerup.bs.swipe",a=>this._end(a)),this._element.classList.add("pointer-event")):
(b.on(this._element,"touchstart.bs.swipe",a=>this._start(a)),b.on(this._element,"touchmove.bs.swipe",a=>this._move(a)),b.on(this._element,"touchend.bs.swipe",a=>this._end(a)))}_eventIsPointerPenTouch(a){return this._supportPointerEvents&&("pen"===a.pointerType||"touch"===a.pointerType)}static isSupported(){return"ontouchstart"in document.documentElement||0<navigator.maxTouchPoints}}return e});
