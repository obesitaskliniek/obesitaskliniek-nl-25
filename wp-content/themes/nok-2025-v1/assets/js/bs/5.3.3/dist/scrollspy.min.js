/*
 Bootstrap scrollspy.js v5.3.3 (https://getbootstrap.com/)
 Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
*/
(function(d,e){"object"===typeof exports&&"undefined"!==typeof module?module.exports=e(require("./base-component.js"),require("./dom/event-handler.js"),require("./dom/selector-engine.js"),require("./util/index.js")):"function"===typeof define&&define.amd?define(["./base-component","./dom/event-handler","./dom/selector-engine","./util/index"],e):(d="undefined"!==typeof globalThis?globalThis:d||self,d.Scrollspy=e(d.BaseComponent,d.EventHandler,d.SelectorEngine,d.Index))})(this,function(d,e,f,g){const n=
{offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},p={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class h extends d{constructor(a,b){super(a,b);this._targetLinks=new Map;this._observableSections=new Map;this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element;this._observer=this._activeTarget=null;this._previousScrollData={visibleEntryTop:0,parentScrollTop:0};this.refresh()}static get Default(){return n}static get DefaultType(){return p}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables();
this._maybeEnableSmoothScroll();this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const a of this._observableSections.values())this._observer.observe(a)}dispose(){this._observer.disconnect();super.dispose()}_configAfterMerge(a){a.target=g.getElement(a.target)||document.body;a.rootMargin=a.offset?`${a.offset}px 0px -30%`:a.rootMargin;"string"===typeof a.threshold&&(a.threshold=a.threshold.split(",").map(b=>Number.parseFloat(b)));return a}_maybeEnableSmoothScroll(){this._config.smoothScroll&&
(e.off(this._config.target,"click.bs.scrollspy"),e.on(this._config.target,"click.bs.scrollspy","[href]",a=>{var b=this._observableSections.get(a.target.hash);b&&(a.preventDefault(),a=this._rootElement||window,b=b.offsetTop-this._element.offsetTop,a.scrollTo?a.scrollTo({top:b,behavior:"smooth"}):a.scrollTop=b)}))}_getNewObserver(){return new IntersectionObserver(a=>this._observerCallback(a),{root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin})}_observerCallback(a){const b=
c=>this._targetLinks.get(`#${c.target.id}`),k=c=>{this._previousScrollData.visibleEntryTop=c.target.offsetTop;this._process(b(c))},l=(this._rootElement||document.documentElement).scrollTop,m=l>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=l;for(const c of a)if(c.isIntersecting)if(a=c.target.offsetTop>=this._previousScrollData.visibleEntryTop,m&&a){if(k(c),!l)break}else m||a||k(c);else this._activeTarget=null,this._clearActiveClass(b(c))}_initializeTargetsAndObservables(){this._targetLinks=
new Map;this._observableSections=new Map;var a=f.find("[href]",this._config.target);for(const b of a)b.hash&&!g.isDisabled(b)&&(a=f.findOne(decodeURI(b.hash),this._element),g.isVisible(a)&&(this._targetLinks.set(decodeURI(b.hash),b),this._observableSections.set(b.hash,a)))}_process(a){this._activeTarget!==a&&(this._clearActiveClass(this._config.target),this._activeTarget=a,a.classList.add("active"),this._activateParents(a),e.trigger(this._element,"activate.bs.scrollspy",{relatedTarget:a}))}_activateParents(a){if(a.classList.contains("dropdown-item"))f.findOne(".dropdown-toggle",
a.closest(".dropdown")).classList.add("active");else for(const b of f.parents(a,".nav, .list-group"))for(const k of f.prev(b,".nav-link, .nav-item > .nav-link, .list-group-item"))k.classList.add("active")}_clearActiveClass(a){a.classList.remove("active");a=f.find("[href].active",a);for(const b of a)b.classList.remove("active")}static jQueryInterface(a){return this.each(function(){const b=h.getOrCreateInstance(this,a);if("string"===typeof a){if(void 0===b[a]||a.startsWith("_")||"constructor"===a)throw new TypeError(`No method named "${a}"`);
b[a]()}})}}e.on(window,"load.bs.scrollspy.data-api",()=>{for(const a of f.find('[data-bs-spy="scroll"]'))h.getOrCreateInstance(a)});g.defineJQueryPlugin(h);return h});
