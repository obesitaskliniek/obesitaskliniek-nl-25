import{ViewportScroller}from"./domule/util.ensure-visibility.mjs";export const NAME="accordion";const CSSSupport=CSS?CSS.supports("interpolate-size","allow-keywords"):false;const AccordionGroups=new Map;const AccordionInstances=new WeakMap;function makeGroup(){return{busy:false,accordions:new Set}}class Accordion{constructor(el){this.el=el;this.computedStyle=window.getComputedStyle(this.el);this.transitionDuration=parseInt(this.computedStyle.getPropertyValue("--animation-duration"))||750;this.transitionEasing=
this.computedStyle.getPropertyValue("--animation-timing")||"cubic-bezier(0.16, 1, 0.3, 1)";this._visibilityCorrector=new ViewportScroller(el,{behavior:"smooth",extraOffset:20});if(!CSSSupport){this.summary=el.querySelector("summary");this.content=el.querySelector(".accordion-content");this.animation=null;this.isClosing=false;this.isExpanding=false;this.summary.addEventListener("click",e=>this.toggle(e));AccordionInstances.set(this.el,this);this.name=this.el.getAttribute("name");this.groupRef=this.name||
this.el;let group=AccordionGroups.get(this.groupRef);if(!group){group=makeGroup();AccordionGroups.set(this.groupRef,group)}group.accordions.add(this.el);this.group=group;this.opened=this.el.open||false}else this.el.addEventListener("toggle",e=>this.maintainVisibility())}maintainVisibility(){const onTransitionEnd=()=>{if(!this.el.open)return;this._visibilityCorrector.ensureVisible()};this.el.addEventListener("transitionend",onTransitionEnd,{once:true});window.addEventListener("scroll",()=>{this.el.removeEventListener("transitionend",
onTransitionEnd)},{once:true})}animateHeight(startH,endH,onfinish){this.animation?.finish();this.group.busy=true;this.animation=this.el.animate({height:[startH,endH]},{duration:this.transitionDuration,easing:this.transitionEasing,fill:"forwards"});this.animation.onfinish=()=>{this.group.busy=false;onfinish()}}toggle(e){e.preventDefault();if(this.group.busy)return;this.el.style.overflow="hidden";if(this.isClosing||!this.el.open)this.open();else if(this.isExpanding||this.el.open)this.collapse()}open(){this.currentScrollY=
window.scrollY;if(this.group.accordions.size>1){if(this.name)this.el.removeAttribute("name");for(const otherEl of this.group.accordions)if(otherEl!==this.el&&otherEl.open)AccordionInstances.get(otherEl).collapse()}this.el.style.height=`${this.el.offsetHeight}px`;this.el.open=true;window.requestAnimationFrame(()=>{window.requestAnimationFrame(()=>this.expand())})}collapse(){this.isClosing=true;this.el.classList.add("accordion-closing");const startHeight=`${this.el.offsetHeight}px`;const endHeight=
`${this.summary.offsetHeight}px`;this.animateHeight(startHeight,endHeight,()=>this.onAnimationFinish(false))}expand(){this.isExpanding=true;this.el.classList.remove("accordion-closing");const startHeight=`${this.el.offsetHeight}px`;const endHeight=`${this.summary.offsetHeight+this.content.offsetHeight}px`;this.animateHeight(startHeight,endHeight,()=>this.onAnimationFinish(true))}onAnimationFinish(open){this.el.open=open;this.summary.setAttribute("aria-expanded",String(open));this.animation=null;this.isClosing=
false;this.el.classList.remove("accordion-closing");this.isExpanding=false;this.el.style.height=this.el.style.overflow="";if(this.name)this.el.setAttribute("name",this.name);if(open&&this.currentScrollY===window.scrollY)this._visibilityCorrector.ensureVisible()}}export function init(elements){elements.forEach(element=>{element.querySelectorAll("details").forEach(details=>{new Accordion(details)})});if(CSSSupport)return"No need for polyfill - browser has native support."};
