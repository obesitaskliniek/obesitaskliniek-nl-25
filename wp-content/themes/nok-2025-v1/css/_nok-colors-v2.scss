@use "sass:map";
@use "sass:color";
@use "nok-variables";
@use "nok-utilities";

$white: #f3f4f9;
$black: #222;
$color-contrast-dark: #222;
$color-contrast-light: #f3f4f9;
$min-contrast-ratio: 4.5;

$bg-colors: true;
$text-colors: true;
$border-colors: false;
$input-colors: false;

$nok-base-colors: (
    'lightblue':      #00b0e4,
	'darkblue':       #14477c,
	'darkerblue':     #0b2355,
	'darkestblue':    #00132f,
	'yellow':         #ffd41f,
	'green':          #54b085,
	'greenyellow':    #CCCC33,
	'greenblue':      #35aba5,
	'lightgreenblue': #93e1f4,
    'error':          #d82510,
    'body':           $white,
	'white':          #FFF,
	'black':          $black,
	'lightgrey':      #CCC,
);

$nok-base-colors_light: ();
$nok-base-colors_dark: ();
$nok-contrast-overrides: ();

// color names listed here will be either adjusted for dark mode (using saturation/lightness)
// or overridden in dark mode if listed both here and in $nok-dark-colors-overrides
$nok-base-colors-adjust-for-dark: (
    'body',
    'yellow',
    'darkyellow',
    'paleyellow',
    'green',
    'greenyellow',
    'greenblue',
    'lightgreenblue',
    'error',
);

$nok-dark-colors-overrides: (
    'body':           #00132f,
);

$nok-dark-contrast-overrides: (
    'body':           #cdd9ed,
);


@each $name, $color in $nok-base-colors {
  $nok-base-colors_light: map.merge($nok-base-colors_light, (
      $name: $color,
      $name+'--darker' :  color.adjust(color.adjust($color, $lightness: if(color.saturation($color) > 0%, -5%, -10%), $space: hsl), $saturation: if(color.saturation($color) > 0%, -10%, 0%), $space: hsl),
      $name+'--lighter' :  color.adjust(color.adjust($color, $lightness: if(color.saturation($color) > 0%, 5%, 10%), $space: hsl), $saturation: if(color.saturation($color) > 0%, 10%, 0%), $space: hsl)
  ));
}

@each $name in $nok-base-colors-adjust-for-dark {
  $color: if(map-has-key($nok-dark-colors-overrides, $name), map.get($nok-dark-colors-overrides, $name), map.get($nok-base-colors, $name));
  @if $color {
    $nok-base-colors_dark: map.merge($nok-base-colors_dark, (
        $name : color.adjust(color.adjust($color, $lightness: -5%), $saturation: -10%),
        $name+'--darker' :  color.adjust(color.adjust($color, $lightness: -10%), $saturation: -15%),
        $name+'--lighter' :  $color
    ));
  }
}

$nok-base-colors: $nok-base-colors_light;

/* Normal (and dark unless overridden) mode color variables */
:root {
  @each $name, $color in $nok-base-colors_light {
    --#{nok-variables.$prefix}-#{$name}: #{$color};
    --#{nok-variables.$prefix}-#{$name}-contrast: #{nok-utilities.get-contrast-color($color, $color-contrast-light, $color-contrast-dark)};
  }
}

/* Dark mode color variables */
@media (prefers-color-scheme: dark) {
  :root {
    @each $name, $color in $nok-base-colors_dark {
      --#{nok-variables.$prefix}-#{$name}: #{$color};
      --#{nok-variables.$prefix}-#{$name}-contrast: #{nok-utilities.get-contrast-color($color, $color-contrast-light, $color-contrast-dark)};
    }
  }
}


@each $name, $color in $nok-base-colors {
  .#{nok-variables.$prefix}-bg-#{$name} {
    --bg-rgb-base: var(--#{nok-variables.$prefix}-#{$name});
    --bg-rgb-base-contrast: var(--#{nok-variables.$prefix}-#{$name}-contrast);
    --bg-color: rgb(from var(--bg-rgb-base) r g b / var(--alpha-value, 1));
  }
  .#{nok-variables.$prefix}-text-#{$name} {
    --text-rgb-base: var(--#{nok-variables.$prefix}-#{$name});
    --text-rgb-base-contrast: var(--#{nok-variables.$prefix}-#{$name}-contrast);
  }
}

// Generate the background and text color classes
$bg-selectors: ();
$text-selectors: ();

@each $name, $color in $nok-base-colors {
  $bg-selectors: append($bg-selectors, ".#{nok-variables.$prefix}-bg-#{$name}", comma);
  $text-selectors: append($text-selectors, ".#{nok-variables.$prefix}-text-#{$name}", comma);
}

%general_color_variables {
  --alpha-value: 1;
}

#{$bg-selectors} {
  @extend %general_color_variables;
  --bg-color: rgb(from var(--bg-rgb-base) r g b / var(--alpha-value, 1));
  --bg-color--contrast: rgb(from var(--bg-rgb-base-contrast) r g b / var(--alpha-value, 1));
  --bg-color--hover: oklch(from var(--bg-rgb-base) calc(l * 1.1) calc(c * 0.9) h);
  --bg-color--active: oklch(from var(--bg-rgb-base) calc(l * 1.05) calc(c * 1.1) h);
  --bg-color--grayscale: oklch(from var(--bg-rgb-base) l 0 h); //for disabled
  background-color: var(--bg-color, inherit);
  color: var(--bg-color--contrast, inherit);
}

#{$text-selectors} {
  @extend %general_color_variables;
  --text-color: rgb(from var(--text-rgb-base) r g b / var(--alpha-value, 1));
  --text-color--contrast: rgb(from var(--bg-rgb-base-contrast) r g b / var(--alpha-value, 1));
  --text-color--hover: oklch(from var(--text-rgb-base) calc(l * 1.1) calc(c * 0.9) h);
  --text-color--active: oklch(from var(--text-rgb-base) calc(l * 1.05) calc(c * 1.1) h);
  --text-color--grayscale: oklch(from var(--text-rgb-base) l 0 h); //for disabled
  color: var(--text-color, inherit);
}
