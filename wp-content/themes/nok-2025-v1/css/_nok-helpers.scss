@use "sass:math";
@use "sass:map";
@use "nok-variables";
@use "tools/nok-mixins";
@use "tools/nok-api";

:root {
  @each $key, $value in nok-variables.$exposed-variables {
    --#{nok-variables.$prefix}-#{$key}: #{$value};
  }
}

.#{nok-variables.$prefix}-heading-font {
  @include nok-mixins.nok-heading-font;
}

.#{nok-variables.$prefix}-small-text-font,
.#{nok-variables.$prefix}-text-font {
  @include nok-mixins.nok-text-font;
}

.#{nok-variables.$prefix}-stretched-link {
  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    content: "";
  }

  @at-root *:has(&) {
    position: relative;
  }
}

/* Enable draggable cursor for non-touch devices */
@media (pointer: fine) {
  .#{nok-variables.$prefix}-draggable {
    & {
      cursor: grab;
    }

    &:active {
      cursor: grabbing;
      user-select: none;
    }
  }
}

.fw-bold {
  font-weight: 600;
}

.natural-fit-image {
  img {
    width: 100%;
    height: auto;
  }
}

.w-100 {
  width: 100%;
}

.#{nok-variables.$prefix}-bg-blur {
  backdrop-filter: blur(5px);

  &--large {
    backdrop-filter: blur(10px);
  }
}

/* Stacking */

.#{nok-variables.$prefix}-sticky {
  position: sticky;
  top: 0;
  z-index: nok-variables.$z-stack-top;

  &--fixed {
    position: fixed;
  }
}

@for $i from 1 through 9 {
  .#{nok-variables.$prefix}-z-#{$i} {
    z-index: #{$i};
  }
}

.#{nok-variables.$prefix}-z-top {
  z-index: nok-variables.$z-stack-top;
}

/* Aligners */

.valign-center {
  display: flex;
  align-items: center;
}

.align-center {
  align-self: center;
}

.text-center {
  text-align: center;
}

.align-self-stretch {
  align-self: stretch;
  grid-column: 1 / -1;
}

.align-self-end {
  align-self: end;
}

/* Rounded borders */

.#{nok-variables.$prefix}-rounded-border {
  @include nok-mixins.nok-border-radius();

  $border-sizes: 'default', 'large', 'x-large', 'xx-large';
  $border-positions: 'top', 'right', 'left', 'bottom';

  @each $size in $border-sizes {
    @if $size == 'default' {
      @each $pos in $border-positions {
        &-#{$pos} {
          @include nok-mixins.nok-border-radius('default', $pos);
        }
      }
    } @else {
      &-#{$size} {
        @include nok-mixins.nok-border-radius($size);

        @each $pos in $border-positions {
          &-#{$pos} {
            @include nok-mixins.nok-border-radius($size, $pos);
          }
        }
      }
    }
  }
}


/* animations */
//todo: are these used?
@media (prefers-reduced-motion: no-preference) {
  @keyframes slide--in {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0%);
      opacity: 1;
    }
  }

  @keyframes slide--out {
    from {
      transform: translateX(0%);
      opacity: 1;
    }
    to {
      transform: translateX(100%);
      opacity: 1;
    }
  }

  @keyframes fade--in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fade--out {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
}

/* accessibility */

.#{nok-variables.$prefix}-accessibility-helper {
  display: none;
  visibility: hidden;
  inset: 0;
  position: fixed;
  z-index: nok-variables.$z-stack-top + 1;
  pointer-events: none;
}

@media (prefers-contrast: less) {
  body > .#{nok-variables.$prefix}-accessibility-helper {
    display: block;
    visibility: visible;
    backdrop-filter: brightness(0.9) contrast(0.9);
  }
}

@media (prefers-contrast: more) {
  body > .#{nok-variables.$prefix}-accessibility-helper {
    display: block;
    visibility: visible;
    backdrop-filter: brightness(1.1) contrast(1.1);
  }
}

/* Font size */
@for $i from 1 through 7 {
  .#{nok-variables.$prefix}-fs-#{$i} {
    font-size: var(--nok25-font-size-#{(8- $i)});
  }
}

.#{nok-variables.$prefix}-fs-buttons {
  font-size: var(--nok25-font-size-buttons);
}

/* Alpha classes */
$alphas: (
        "alpha-1": 1,
        "bg-alpha-1": 1,
);
@for $i from 0 through 10 {
  $value: ($i / 10);
  .#{nok-variables.$prefix}-alpha-#{$i} {
    --text-alpha-value: #{$value};
  }
  .#{nok-variables.$prefix}-bg-alpha-#{$i} {
    --bg-alpha-value: #{$value};
  }
  @media (prefers-color-scheme: dark) {
    .#{nok-variables.$prefix}-dark-alpha-#{$i} {
      --text-alpha-value: #{$value};
    }
    .#{nok-variables.$prefix}-dark-bg-alpha-#{$i} {
      --bg-alpha-value: #{$value};
    }
  }
}


/* margin */
@for $i from 1 through 5 {
  .#{nok-variables.$prefix}-mr-#{$i} {
    margin-right: #{($i * nok-variables.$padding-base)};
  }
  .#{nok-variables.$prefix}-mb-#{$i} {
    margin-bottom: #{($i * nok-variables.$padding-base)};
  }
  .#{nok-variables.$prefix}-ml-#{$i} {
    margin-left: #{($i * nok-variables.$padding-base)};
  }
}

$padding-base-values: (
        0 : 0,
        grid-gap: var(--grid-gap),
        section-padding: var(--nok25-padding-section-sides),
        1: #{(1 * nok-variables.$padding-base)},
        2: #{(2 * nok-variables.$padding-base)},
        3: #{(3 * nok-variables.$padding-base)},
        4: #{(4 * nok-variables.$padding-base)},
        5: #{(5 * nok-variables.$padding-base)},
);

$utilities: (
        "padding-top": (
                property: padding-bottom,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pb,
                values: $padding-base-values
        ),
        "padding-bottom": (
                property: padding-bottom,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-pb,
                values: $padding-base-values
        ),
        "margin-top": (
                property: margin-top,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-mt,
                values: $padding-base-values
        ),
        "margin-end": (
                property: margin-right,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-me,
                values: $padding-base-values
        ),
        "margin-bottom": (
                property: margin-right,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-mb,
                values: $padding-base-values
        ),
        "margin-start": (
                property: margin-left,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-ms,
                values: $padding-base-values
        ),
        "margin-collapse-x": (
                property: margin-right margin-left,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-collapse-x,
                no-suffix: true,
                values: 0
        ),
        "margin-collapse-y": (
                property: margin-top margin-bottom,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-collapse-y,
                no-suffix: true,
                values: 0
        ),
        "margin-collapse-top": (
                property: margin-top,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-collapse-top,
                no-suffix: true,
                values: 0
        ),
        "margin-collapse-bottom": (
                property: margin-bottom,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-collapse-bottom,
                no-suffix: true,
                values: 0
        ),
        "border-radius": (
                css-var: true,
                css-variable-name: default-border-radius--large,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-border-radius,
                values: 0
        ),
        "invisible": (
                property: display,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-invisible,
                no-suffix: true,
                values: none,
        ),
        "order": (
                responsive: true,
                property: order,
                class: #{nok-variables.$prefix}-order,
                values: (
                        first: -1,
                        0: 0,
                        1: 1,
                        2: 2,
                        3: 3,
                        4: 4,
                        last: 5,
                ),
        ),
        "columns": (
                css-var: true,
                css-variable-name: grid-columns,
                no-prefix: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-columns,
                values: 0 1 2 3 4 5
        ),
        "align-self": (
                responsive: false,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-align-self,
                values: (
                        stretch: (align-self: stretch, grid-column: "1 / -1")
                )
        ),

        //conceptual
        "column-start-to": (
                property: grid-column,
                class: #{nok-variables.$prefix}-column-start-to,
                values: (
                        end: "1 / -1",
                        3: "1 / 3",
                        2: "1 / 2",
                )
        ),


        "font-size": (
                property: font-size,
                responsive: true,
                responsive-up-to: true,
                class: #{nok-variables.$prefix}-fs,
                values: nok-variables.$font-sizes

        )
);

//construct helpers
@include nok-api.generate-helpers($utilities);